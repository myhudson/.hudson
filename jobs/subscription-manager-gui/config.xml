<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This suite executes an exhaustive set of tests against subscription-manager-gui based upon the following TCMS suite:&lt;BR/&gt;&#xd;
&lt;a href=&quot;https://tcms.engineering.redhat.com/plan/2110/&quot;&gt;https://tcms.engineering.redhat.com/plan/2110/&lt;/a&gt;&lt;BR/&gt;&#xd;
&lt;br/&gt;&#xd;
&lt;H3&gt;MANUAL INSTRUCTIONS:&lt;/H3&gt; &#xd;
&lt;UL&gt;&#xd;
&lt;LI&gt; Click &apos;Build Now&apos; to manually begin a test run. &lt;/LI&gt;&#xd;
&lt;LI&gt; From the list of fields, read their descriptions and set the values appropriate for your testing. &lt;/LI&gt;&#xd;
&lt;LI&gt; Then click the &apos;Build&apos; button. &lt;/LI&gt;&#xd;
&lt;/UL&gt;&#xd;
&lt;br/&gt;&#xd;
</description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.model.Item.Read:anonymous</permission>
      <permission>hudson.model.Item.Build:anonymous</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>CLIENT_HOSTNAME</name>
          <description>hostname of client running VNC server/funcd</description>
          <defaultValue>auto-smgui.usersys.redhat.com</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CLIENT_LOCALUSER</name>
          <description>local user on client to run test under</description>
          <defaultValue>rhsm</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RHSM_RPM</name>
          <description>url to latest subscription-manager RPM</description>
          <defaultValue>http://hudson-qe.rhq.rdu.redhat.com:8080/view/Entitlement/job/subscription-manager-latest/lastSuccessfulBuild/artifact/subscription-manager.i386.rpm</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RHSM_GUI_RPM</name>
          <description>url to latest subscription-manager-gnome RPM</description>
          <defaultValue>http://hudson-qe.rhq.rdu.redhat.com:8080/view/Entitlement/job/subscription-manager-latest/lastSuccessfulBuild/artifact/subscription-manager-gnome.i386.rpm</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CLIENT_USERNAME</name>
          <description>username used to register to a Candlepin server</description>
          <defaultValue>isu-sukhoy</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CLIENT_PASSWORD</name>
          <description>password used to register to a Candlepin server</description>
          <defaultValue>redhat</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SERVER_HOSTNAME</name>
          <description>hostname of a functional Candlepin server</description>
          <defaultValue>candlepin1.devlab.phx1.redhat.com</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SERVER_PORT</name>
          <description>port through which to access Candlepin server</description>
          <defaultValue>443</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RHSM_LOCALCERT</name>
          <description>URL where one can download a valid Candlepin entitlement certificate</description>
          <defaultValue>http://git.rhndev.redhat.com/git/?p=automatjon.git&amp;a=blob_plain&amp;f=subscription-manager-gui/testcerts/product/rhds.pem&amp;hb=HEAD</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RHSM_REGTOKEN</name>
          <description>Registration token one can use to register to a Candlepin server</description>
          <defaultValue>1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SERVER_BASEURL</name>
          <description>base URL to Candlepin server as set in /etc/rhsm/rhsm.conf (you can usually leave this one alone)</description>
          <defaultValue>http:\/\/redhat.com\/content</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>selenium</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe
cd $WORKSPACE
if [ -d automatjon ]; then 
 cd automatjon
 git clean -dxf
 git pull
else
 git clone git://git.rhndev.redhat.com/automatjon
fi

cd $WORKSPACE

if [ -d webui-framework ]; then 
 cd webui-framework
 git clean -dxf
 git pull
else
 git clone git://github.com/weissjeffm/webui-framework.git
fi

SSHKEYDIR=$WORKSPACE/automatjon/jon/.ssh/
chmod 600 $SSHKEYDIR/id*
SSHPUBKEY=~/.ssh/id_hudson_dsa

cd $WORKSPACE/automatjon
rm -rf smgui.tgz sm-tests.properties subscription-manager-gui/test-output/ subscription-manager-gui/results.tgz
tar cvzf smgui.tgz subscription-manager-gui/

echo &quot;#auto-generated sm-tests.properties via Hudson
rhsm.client.username: $CLIENT_USERNAME
rhsm.client.password: $CLIENT_PASSWORD
rhsm.client.regtoken: $RHSM_REGTOKEN
rhsm.server.hostname: $SERVER_HOSTNAME
rhsm.server.port: $SERVER_PORT
rhsm.server.baseurl: $SERVER_BASEURL
rhsm.rpm: $RHSM_RPM
rhsm.gui.rpm: $RHSM_GUI_RPM
rhsm.insecure: true
rhsm.localcert: $RHSM_LOCALCERT
&quot; &gt; $WORKSPACE/sm-tests.properties

SSHCLIENT=&quot;ssh -i $SSHPUBKEY $CLIENT_LOCALUSER@$CLIENT_HOSTNAME&quot;
REMOTE_WORKDIR=/tmp/subscription-manager-gui
REMOTE_OUTPUTDIR=$REMOTE_WORKDIR/test-output
sudo func &quot;$CLIENT_HOSTNAME&quot; call command run &quot;rm -rf /tmp/smgui.tgz $REMOTE_WORKDIR&quot;
scp -i $SSHPUBKEY $WORKSPACE/automatjon/smgui.tgz $CLIENT_LOCALUSER@$CLIENT_HOSTNAME:/tmp/smgui.tgz
scp -i $SSHPUBKEY $WORKSPACE/sm-tests.properties $CLIENT_LOCALUSER@$CLIENT_HOSTNAME:/tmp/sm-tests.properties
sudo func &quot;$CLIENT_HOSTNAME&quot; call command run &quot;tar -C /tmp -xvzf /tmp/smgui.tgz&quot;
sudo func &quot;$CLIENT_HOSTNAME&quot; call command run &quot;mkdir $REMOTE_OUTPUTDIR&quot;
sudo func &quot;$CLIENT_HOSTNAME&quot; call command run &quot;touch $REMOTE_OUTPUTDIR/smgui-results.xml&quot;

#Register our nosetests plugin(s), if hasn&apos;t been done already
sudo func &quot;$CLIENT_HOSTNAME&quot; call command run &quot;cd $REMOTE_WORKDIR;easy_install .&quot;
#Run tests
sudo func &quot;$CLIENT_HOSTNAME&quot; call command run &quot;nosetests --screenshot-dir=$REMOTE_OUTPUTDIR/screenshots --with-xunit --xunit-file=$REMOTE_OUTPUTDIR/smgui-results.xml $REMOTE_WORKDIR/*tests.py&quot;
sudo func &quot;$CLIENT_HOSTNAME&quot; call command run &quot;tar cvzf $REMOTE_WORKDIR/results.tgz $REMOTE_OUTPUTDIR/*;chown $CLIENT_LOCALUSER $REMOTE_WORKDIR/results.tgz&quot;

mkdir -p $WORKSPACE/automatjon/subscription-manager-gui/test-output/
scp -i $SSHPUBKEY $CLIENT_LOCALUSER@$CLIENT_HOSTNAME:$REMOTE_WORKDIR/results.tgz $WORKSPACE/automatjon/subscription-manager-gui/test-output/results.tgz
cd $WORKSPACE/automatjon/subscription-manager-gui/test-output/
tar xvzf results.tgz
mv $WORKSPACE/automatjon/subscription-manager-gui/test-output/tmp/subscription-manager-gui/test-output/* .
rm -rf $WORKSPACE/automatjon/subscription-manager-gui/test-output/tmp/
touch $WORKSPACE/automatjon/subscription-manager-gui/test-output/smgui-results.xml</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>automatjon/subscription-manager-gui/test-output/**</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>automatjon/subscription-manager-gui/test-output/smgui-results.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers/>
</project>